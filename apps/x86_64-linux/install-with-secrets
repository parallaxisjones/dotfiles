#!/usr/bin/env bash
set -euo pipefail

# This script assumes you are running from a local checkout of this repo
# inside the NixOS installer environment. It avoids any external template
# downloads and uses the repo’s own flake and disko config.

require_installer() {
  if [ ! -e /etc/NIXOS ]; then
    echo "Not running in the NixOS installer environment." 1>&2
    exit 1
  fi
}

detect_target() {
  local arch
  arch="$(uname -m)"
  case "$arch" in
    aarch64) FLAKE_TARGET="aarch64-linux" ;;
    x86_64)  FLAKE_TARGET="x86_64-linux" ;;
    *) echo "Unsupported arch: $arch" 1>&2; exit 1 ;;
  esac
}

run_disko() {
  # Use disko to (destructively) partition, create, and mount
  # the target per this repo’s disk-config.
  sudo nix run --extra-experimental-features nix-command --extra-experimental-features flakes \
    github:nix-community/disko -- \
    --mode zap_create_mount "$PWD/modules/nixos/disk-config.nix"
}

stage_repo_into_target() {
  sudo mkdir -p /mnt/etc/nixos
  # Copy this checkout into the target (exclude VCS artifacts)
  sudo rsync -a --delete \
    --exclude ".git" \
    --exclude ".direnv" \
    --exclude "result" \
    "$PWD"/ /mnt/etc/nixos/
  # Make sure GitHub is trusted for initial input fetches if needed
  sudo mkdir -p /root/.ssh
  sudo touch /root/.ssh/known_hosts
  ssh-keyscan -t ed25519 github.com | sudo tee -a /root/.ssh/known_hosts >/dev/null
}

install_system() {
  sudo nixos-install --flake /mnt/etc/nixos#${FLAKE_TARGET} "$@"
  # allow post-install edits without root-only perms
  sudo chmod -R go+rX /mnt/etc/nixos || true
}

prompt_reboot() {
  read -r -p "Reboot now? (y/yes to reboot) " ans
  case "$ans" in
    y|Y|yes|YES) sudo reboot ;;
    *) echo "Reboot skipped." ;;
  esac
}

require_installer
detect_target
run_disko
stage_repo_into_target
install_system "$@"
prompt_reboot
